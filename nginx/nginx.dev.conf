user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

include /usr/share/nginx/modules/*.conf;

events {
  worker_connections 1024;
}

http {
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log  main;

  sendfile            on;
  tcp_nopush          on;
  tcp_nodelay         on;
  keepalive_timeout   65;
  types_hash_max_size 2048;

  proxy_cache_path /etc/nginx/cache levels=1:2 keys_zone=backcache:8m max_size=50m;
  proxy_cache_key "$scheme$request_method$host$request_uri$is_args$args";
  proxy_cache_valid 200 302 10m;
  proxy_cache_valid 404 1m;

  default_type        application/octet-stream;

  map $http_upgrade $connection_upgrade {
      default upgrade;
      '' close;
  }

  server {

    listen       80 default_server;
    listen       [::]:80 default_server;
    
    # listen       443 ssl http2 default_server;
    # listen       [::]:443 ssl http2 default_server;

    # ssl_certificate "/etc/nginx/ssl/origin.crt";
    # ssl_certificate_key "/etc/nginx/ssl/server.key";
    # ssl_session_cache shared:SSL:1m;
    # ssl_session_timeout  10m;
    # ssl_ciphers HIGH:!aNULL:!MD5;
    # ssl_prefer_server_ciphers on;
    
    server_name  _;

    location /api {
      
      proxy_pass http://api:8080;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
    }
    
    location /mongopanel {
      proxy_pass http://mongopanel:8081;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
    }
    
    location /nginxcheck {
      default_type application/json;
      return 200 '{"msg":"NGINX is alive"}';
    }

    location / {
      proxy_pass http://app:8080;
      
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    

    location /ionic-lab {
      proxy_pass http://app:8081;
      
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }
}
